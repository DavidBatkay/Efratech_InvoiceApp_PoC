// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Invoice {
  id             Int        @id @default(autoincrement())
  companyName    String
  dateOfCreation DateTime   @default(now())
  totalValue     Float
  invoiceNumber  String     @unique
  dueDate        DateTime
  status         String
  lineItems      LineItem[]
  notes          String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt

  // Foreign key to User model
  user_id Int
  user    User @relation(fields: [user_id], references: [user_id], onDelete: Cascade)

  // Foreign key to Payment model
  payment   Payment? @relation(fields: [paymentId], references: [id])
  paymentId Int?
}

model LineItem {
  id          Int     @id @default(autoincrement())
  description String
  quantity    Int
  unitPrice   Float
  invoiceId   Int
  invoice     Invoice @relation(fields: [invoiceId], references: [id], onDelete: Cascade) // âœ… Add Cascade Delete here
}

model Payment {
  id        Int       @id @default(autoincrement())
  invoiceId Int       @unique
  company   String // Will eventually be replaced with customerId
  amount    Float
  createdAt DateTime  @default(now()) // Tracks when the payment was made
  Invoice   Invoice[]
  notes     String?
  user_id   Int
  user      User      @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
}

model User {
  user_id  Int       @id @default(autoincrement())
  email    String    @unique
  name String?
  password String?
  createdAt DateTime @default(now())
  invoices Invoice[]
  Payment  Payment[]

  @@map("users") // Optional: maps to "users" table in the database
}
